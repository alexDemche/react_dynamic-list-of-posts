{"version":3,"sources":["components/User/User.js","components/Comment/Comment.js","components/CommentList/CommentList.js","components/Post/Post.js","components/PostList/PostList.js","App.js","index.js"],"names":["User","_ref","user","name","email","_user$address","address","city","street","react_default","a","createElement","className","Comment","comment","body","CommentList","comments","map","components_Comment_Comment","key","id","Post","post","title","components_User_User","components_CommentList_CommentList","PostList","posts","components_Post_Post","POSTS_URL","COMMENTS_URL","USERS_URL","App","state","postWithUserAndComments","isLoading","error","isShowButton","loadTodos","_this","setState","Promise","all","fetch","then","_ref2","Object","slicedToArray","postsRes","usersRes","commentsRes","json","_ref3","_ref4","postsData","usersData","commentsData","_objectSpread","find","userId","filter","postId","catch","err","_this$state","this","type","disabled","concat","message","onClick","components_PostList_PostList","React","Component","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.141bcb14.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './User.css';\n\nfunction User({ user }) {\n  const { name, email } = user;\n  const { city, street } = user.address;\n\n  return (\n    <div className=\"post__user\">\n      <h3>{name}</h3>\n      <p>{email}</p>\n      <p>\n        <span>\n          city:&nbsp;\n          {city}\n        </span>\n        <span>\n          , street:&nbsp;\n          {street}\n        </span>\n      </p>\n      <hr className=\"user__bottom-line\" />\n    </div>\n  );\n}\n\nconst shape = PropTypes.shape({\n  id: PropTypes.number.isRequired,\n  name: PropTypes.string.isRequired,\n  email: PropTypes.string.isRequired,\n  address: PropTypes.shape({\n    street: PropTypes.string.isRequired,\n    city: PropTypes.string.isRequired,\n  }),\n});\n\nUser.propTypes = {\n  user: shape.isRequired,\n};\n\nexport default User;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './Comment.css';\n\nconst Comment = ({ comment }) => {\n  const { name, email, body } = comment;\n\n  return (\n    <div>\n      <h5>{name}</h5>\n      <p>{body}</p>\n      <p>{email}</p>\n      <hr className=\"comment__bottom-line\" />\n    </div>\n  );\n};\n\nconst shape = PropTypes.shape({\n  id: PropTypes.number.isRequired,\n  name: PropTypes.string.isRequired,\n  body: PropTypes.string.isRequired,\n  email: PropTypes.string.isRequired,\n});\n\nComment.propTypes = {\n  comment: shape.isRequired,\n};\n\nexport default Comment;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Comment from '../Comment/Comment';\n\nconst CommentList = ({ comments }) => comments.map(comment => (\n  <Comment comment={comment} key={comment.id} />\n));\n\nconst shape = PropTypes.shape({\n  id: PropTypes.number.isRequired,\n  name: PropTypes.string.isRequired,\n  body: PropTypes.string.isRequired,\n  email: PropTypes.string.isRequired,\n});\n\nCommentList.propTypes = {\n  comments: PropTypes.arrayOf(shape).isRequired,\n};\n\nexport default CommentList;\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport User from '../User/User';\r\nimport CommentList from '../CommentList/CommentList';\r\nimport './Post.css';\r\n\r\nconst Post = ({ post }) => (\r\n  <div className=\"post\">\r\n    <h1 className=\"post__header\">\r\n      Post #&nbsp;\r\n      {post.id}\r\n    </h1>\r\n    <h2 className=\"post__title\">{post.title}</h2>\r\n    <p className=\"post__body\">{post.body}</p>\r\n    <User user={post.user} />\r\n    <span className=\"post__footer\">Comments:</span>\r\n    <CommentList comments={post.comments} />\r\n  </div>\r\n);\r\n\r\nconst shape = PropTypes.shape({\r\n  id: PropTypes.number.isRequired,\r\n  title: PropTypes.string.isRequired,\r\n});\r\n\r\nPost.propTypes = {\r\n  post: shape.isRequired,\r\n};\r\n\r\nexport default Post;\r\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Post from '../Post/Post';\n\nconst PostList = ({ posts }) => posts.map(post => (\n  <Post post={post} key={post.id} />\n));\n\nconst shape = PropTypes.shape({\n  id: PropTypes.number.isRequired,\n  title: PropTypes.string.isRequired,\n  body: PropTypes.string.isRequired,\n});\n\nPostList.propTypes = {\n  posts: PropTypes.arrayOf(shape).isRequired,\n};\n\nexport default PostList;\n","import React from 'react';\n\nimport './App.css';\nimport PostList from './components/PostList/PostList';\n\nconst POSTS_URL = 'https://jsonplaceholder.typicode.com/posts';\nconst COMMENTS_URL = 'https://jsonplaceholder.typicode.com/comments';\nconst USERS_URL = 'https://jsonplaceholder.typicode.com/users';\n\nclass App extends React.Component {\n  state = {\n    postWithUserAndComments: [],\n    isLoading: false,\n    error: null,\n    isShowButton: true,\n  }\n\n  loadTodos = () => {\n    this.setState({\n      isLoading: true,\n    });\n\n    Promise.all([\n      fetch(POSTS_URL),\n      fetch(USERS_URL),\n      fetch(COMMENTS_URL),\n    ])\n      .then(([postsRes, usersRes, commentsRes]) => (\n        Promise.all([postsRes.json(), usersRes.json(), commentsRes.json()])))\n      .then(([postsData, usersData, commentsData]) => this.setState({\n        isLoading: false,\n        isShowButton: false,\n        postWithUserAndComments: postsData.map(post => ({\n          ...post,\n          user: usersData.find(user => post.userId === user.id),\n          comments: commentsData.filter(comment => comment.postId === post.id),\n        })),\n      }))\n      .catch((err) => {\n        this.setState({\n          isLoading: false,\n          error: err,\n        });\n      });\n  }\n\n  render() {\n    const {\n      isLoading, error, isShowButton, postWithUserAndComments,\n    } = this.state;\n\n    if (isLoading) {\n      return (\n        <div className=\"App\">\n          <h1>Dynamic list of posts</h1>\n          <button\n            className=\"button\"\n            type=\"button\"\n            disabled\n          >\n            Loading...\n          </button>\n        </div>\n      );\n    }\n\n    if (error) {\n      return (\n        <div className=\"App\">\n          <div>{`Error: ${error.message} data`}</div>\n        </div>\n      );\n    }\n\n    return (\n      <div className=\"App\">\n        <h1>Dynamic list of posts</h1>\n        {isShowButton && (\n          <button\n            className=\"button\"\n            type=\"button\"\n            onClick={this.loadTodos}\n          >\n            Load\n          </button>\n        )}\n        <PostList posts={postWithUserAndComments} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}